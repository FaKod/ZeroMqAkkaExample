akka {

    extensions = ["com.romix.akka.serialization.kryo.KryoSerializationExtension$"]


  zeromq {

    # The default timeout for a poll on the actual zeromq socket.
    poll-timeout = 1ms

    # Timeout for creating a new socket
    new-socket-timeout = 10s

    socket-dispatcher {
      # A zeromq socket needs to be pinned to the thread that created it.
      # Changing this value results in weird errors and race conditions within zeromq
      executor = thread-pool-executor
      type = "PinnedDispatcher"
    }
  }

	actor {
	    serializers {
            java = "akka.serialization.JavaSerializer"
            # Define kryo serializer
            kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
        }

        serialization-bindings {
                "eu.fakod.zmqservice.ServiceResult" = kryo
                "eu.fakod.zmqservice.ServiceCall" = kryo
         }

		kryo  {  
			# Possibles values for type are: graph or nograph  
			# graph supports serialization of object graphs with shared nodes  
			# and cyclic references, but this comes at the expense of a small overhead  
			# nograph does not support object grpahs with shared nodes, but is usually faster   
			type = "graph"  
			
			  
			# Possible values for idstrategy are:  
			# default, explicit, incremental  
			#  
			# default - slowest and produces bigger serialized representation. Contains fully-  
			# qualified class names (FQCNs) for each class  
			#  
			# explicit - fast and produces compact serialized representation. Requires that all  
			# classes that will be serialized are pre-registered using the "mappings" and "classes"
			# sections. To guarantee that both sender and receiver use the same numeric ids for the same  
			# classes it is advised to provide exactly the same entries in the "mappings" section   
			#  
			# incremental - fast and produces compact serialized representation. Support optional  
			# pre-registering of classes using the "mappings" and "classes" sections. If class is  
			# not pre-registered, it will be registered dynamically by picking a next available id  
			# To guarantee that both sender and receiver use the same numeric ids for the same   
			# classes it is advised to pre-register them using at least the "classes" section   
			  
			idstrategy = "incremental"
			  
			# Define a default size for byte buffers used during serialization   
			buffer-size = 4096  
			
			# Define a default size for serializer pool
			serializer-pool-size = 16
			
			# If set, akka uses manifests to put a class name
			# of the top-level object into each message
			use-manifests = false
			
			# Log implicitly registered classes. Useful, if you want to know all classes
			# which are serialized
			implicit-registration-logging = true
			  
			# If enabled, Kryo logs a lot of information about serialization process.
			# Useful for debugging and lowl-level tweaking
			kryo-trace = false
			
			# If enabled, Kryo uses internally a map detecting shared nodes.
			# This is a preferred mode for big object graphs with a lot of nodes.
			# For small object graphs (e.g. below 10 nodes) set it to false for 
			# better performance. 
			kryo-reference-map = false
			
			# Define mappings from a fully qualified class name to a numeric id.  
			# Smaller ids lead to smaller sizes of serialized representations.  
			#  
			# This section is mandatory for idstartegy=explciit  
			# This section is optional  for idstartegy=incremental  
			# This section is ignored   for idstartegy=default  
			#   
			# The smallest possible id should start at 20 (or even higher), because
			# ids below it are used by Kryo internally e.g. for built-in Java and 
			# Scala types   
			mappings {
				#"fully.qualified.classname1" = id
			}  
			  
			# Define a set of fully qualified class names for   
			# classes to be used for serialization.  
			# The ids for those classes will be assigned automatically,
			# but respecting the order of declaration in this section  
			#  
			# This section is optional  for idstartegy=incremental  
			# This section is ignored   for idstartegy=default  
			# This section is optional  for idstartegy=explicit  
			classes = [
				# fully.qualified.classname1
				# fully.qualified.classname2			
			]  
		}
	}
}